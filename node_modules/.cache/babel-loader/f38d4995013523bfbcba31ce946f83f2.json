{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Sheel\\\\Downloads\\\\MP\\\\Ethereum_Blockchain_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Sheel\\\\Downloads\\\\MP\\\\Ethereum_Blockchain_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Sheel\\\\Downloads\\\\MP\\\\Ethereum_Blockchain_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Sheel\\\\Downloads\\\\MP\\\\Ethereum_Blockchain_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Sheel\\\\Downloads\\\\MP\\\\Ethereum_Blockchain_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Sheel\\\\Downloads\\\\MP\\\\Ethereum_Blockchain_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Sheel\\\\Downloads\\\\MP\\\\Ethereum_Blockchain_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { Circle, CircleWarp, ParticlesInteractorBase, getDistance, getLinkRandomColor } from \"tsparticles-engine\";\n\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n  var distance = getDistance(pos1, pos2);\n\n  if (!warp || distance <= optDistance) {\n    return distance;\n  }\n\n  var pos2NE = {\n    x: pos2.x - canvasSize.width,\n    y: pos2.y\n  };\n  distance = getDistance(pos1, pos2NE);\n\n  if (distance <= optDistance) {\n    return distance;\n  }\n\n  var pos2SE = {\n    x: pos2.x - canvasSize.width,\n    y: pos2.y - canvasSize.height\n  };\n  distance = getDistance(pos1, pos2SE);\n\n  if (distance <= optDistance) {\n    return distance;\n  }\n\n  var pos2SW = {\n    x: pos2.x,\n    y: pos2.y - canvasSize.height\n  };\n  distance = getDistance(pos1, pos2SW);\n  return distance;\n}\n\nexport var Linker = /*#__PURE__*/function (_ParticlesInteractorB) {\n  _inherits(Linker, _ParticlesInteractorB);\n\n  function Linker(container) {\n    _classCallCheck(this, Linker);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Linker).call(this, container));\n  }\n\n  _createClass(Linker, [{\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return particle.options.links.enable;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(p1) {\n        var _a, pos1, container, canvasSize, linkOpt1, optOpacity, optDistance, warp, range, query, _iterator, _step, p2, linkOpt2, pos2, distance, opacityLine;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                p1.links = [];\n                pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n\n                if (!(pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance, warp = linkOpt1.warp, range = warp ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize) : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n                _iterator = _createForOfIteratorHelper(query);\n                _context.prev = 6;\n\n                _iterator.s();\n\n              case 8:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 24;\n                  break;\n                }\n\n                p2 = _step.value;\n                linkOpt2 = p2.options.links;\n\n                if (!(p1 === p2 || !linkOpt2.enable || linkOpt1.id !== linkOpt2.id || p2.spawning || p2.destroyed || p1.links.map(function (t) {\n                  return t.destination;\n                }).indexOf(p2) !== -1 || p2.links.map(function (t) {\n                  return t.destination;\n                }).indexOf(p1) !== -1)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 22);\n\n              case 13:\n                pos2 = p2.getPosition();\n\n                if (!(pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 22);\n\n              case 16:\n                distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n\n                if (!(distance > optDistance)) {\n                  _context.next = 19;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 19:\n                opacityLine = (1 - distance / optDistance) * optOpacity;\n                this.setColor(p1);\n                p1.links.push({\n                  destination: p2,\n                  opacity: opacityLine\n                });\n\n              case 22:\n                _context.next = 8;\n                break;\n\n              case 24:\n                _context.next = 29;\n                break;\n\n              case 26:\n                _context.prev = 26;\n                _context.t0 = _context[\"catch\"](6);\n\n                _iterator.e(_context.t0);\n\n              case 29:\n                _context.prev = 29;\n\n                _iterator.f();\n\n                return _context.finish(29);\n\n              case 32:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 26, 29, 32]]);\n      }));\n\n      function interact(_x) {\n        return _interact.apply(this, arguments);\n      }\n\n      return interact;\n    }()\n  }, {\n    key: \"setColor\",\n    value: function setColor(p1) {\n      var container = this.container,\n          linksOptions = p1.options.links;\n      var linkColor = linksOptions.id === undefined ? container.particles.linksColor : container.particles.linksColors.get(linksOptions.id);\n\n      if (!linkColor) {\n        var optColor = linksOptions.color;\n        linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n\n        if (linksOptions.id === undefined) {\n          container.particles.linksColor = linkColor;\n        } else {\n          container.particles.linksColors.set(linksOptions.id, linkColor);\n        }\n      }\n    }\n  }]);\n\n  return Linker;\n}(ParticlesInteractorBase);","map":null,"metadata":{},"sourceType":"module"}